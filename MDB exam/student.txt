import java.io.IOException;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
public class student {
    
    public static class testMap extends Mapper<LongWritable,Text, Text, IntWritable> {
        public void map(LongWritable key, Text values, Context context) throws IOException, InterruptedException{
            String line = values.toString();
            String[] insti = line.split(" ");
            context.write(new Text(insti[1]),new IntWritable(1));
        }
    }
    
    public static class testReduce extends Reducer<Text,IntWritable,Text,IntWritable> {
        public void reduce(Text key, Iterable<IntWritable> values,Context context) throws IOException, InterruptedException{
            int total_count = 0;
            for(IntWritable x:values) {
                total_count = total_count + x.get();
            }
            context.write(key, new IntWritable(total_count));
        }
        
    }
    
    public static class stud_enrolmap extends Mapper<LongWritable, Text, Text,IntWritable>{
        public void map(LongWritable key, Text values ,Context context) throws IOException, InterruptedException{
            String line = values.toString();
            String[] course = line.split(" ");
            context.write(new Text(course[2]), new IntWritable(1));
        }
    }
    
    public static class stud_enrolred extends Reducer<Text,IntWritable, Text, IntWritable>{
        public void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException{
            int total_count = 0;
            for(IntWritable x:values) {
                total_count = total_count + x.get();
            }
            context.write(key, new IntWritable(total_count));
        }
    }
    public static void main(String[] args) throws Exception {
        // TODO Auto-generated method stub
        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf,"student");
        job.setJarByClass(student.class);
        job.setMapperClass(testMap.class);
        job.setReducerClass(testReduce.class);
        
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(IntWritable.class);
        
        FileInputFormat.addInputPath(job,new Path(args[0]));
        FileOutputFormat.setOutputPath(job, new Path(args[1]));
        
        job.waitForCompletion(true);
        
        Configuration conf1 = new Configuration();
        Job job1 = Job.getInstance(conf1,"student");
        job1.setJarByClass(student.class);
        job1.setMapperClass(stud_enrolmap.class);
        job1.setReducerClass(stud_enrolred.class);
        
        job1.setOutputKeyClass(Text.class);
        job1.setOutputValueClass(IntWritable.class);
        
        FileInputFormat.addInputPath(job1,new Path(args[0]));
        FileOutputFormat.setOutputPath(job1, new Path(args[2]));
        
        System.exit(job1.waitForCompletion(true)?0:1);
        
    }
}